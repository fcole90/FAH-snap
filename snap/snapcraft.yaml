name: folding-at-home-fcole90
title: Folding@Home
icon: snap/gui/fah-logo.png
base: core18
version: '7.5.1'
summary: Folding at Home - Help research with distributed computing
description: |
 Folding@home (FAH or F@h) is a distributed computing project for simulating protein dynamics, including the process of
 protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen 
 scientists who volunteer to run simulations of protein dynamics on their personal computers. 
 Insights from this data are helping scientists to better understand biology, and providing new opportunities for 
 developing therapeutics.
 
 After intalling the package you need to allow Folding@Home to check your hardware. You can grant this permission with the command:
 "snap connect folding-at-home-fcole90:hardware-observe" (without quotes)
 
 This package contains the console client which is used to download and run Folding@home work units, the 3D simulation 
 viewer and the control application.
 
 More info Folding@Home is run by Pandegroup of Stanford University. You can find more information on the Folding@Home website: https://foldingathome.org
 
 Usage You can use the FAHClient service, the applications FAHControl and FAHViewer, or the webclient at http://client.foldingathome.org/.

 You can interact with FAHClient as a service, as described in the documentation on snap services: https://snapcraft.io/docs/service-management

 Example:
 $ snap services folding-at-home-fcole90.FAHClient
 Service                            Startup  Current  Notes
 folding-at-home-fcole90.FAHClient  enabled  active   -


grade: stable
confinement: strict
architectures: 
  - build-on: amd64
    run-on: amd64

parts:
  # This part installs the `desktop-launch` script which initialises desktop
  # features such as fonts, themes and the XDG environment. It also installs
  # the GTK2 runtime libraries.
  #
  # It is copied straight from the snapcraft desktop helpers project. Please
  # periodically check the source for updates and copy the changes.
  #    https://github.com/ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml
  # 
  desktop-gtk2:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: gtk
    plugin: make
    make-parameters: ["FLAVOR=gtk2"]
    build-packages:
      - build-essential
      - libgtk2.0-dev
    stage-packages:
      - libxkbcommon0  # XKB_CONFIG_ROOT
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - adwaita-icon-theme
      - gnome-themes-standard
      - shared-mime-info
      - libgtk2.0-0
      - libgdk-pixbuf2.0-0
      - libglib2.0-bin
      - libgtk2.0-bin
      - unity-gtk2-module
      - locales-all
      - libappindicator1
      - xdg-user-dirs
      - ibus-gtk
      - libibus-1.0-5
  fahclient:
    plugin: dump
    source: https://download.foldingathome.org/releases/public/release/fahclient/debian-stable-64bit/v7.5/fahclient_7.5.1_amd64.deb
    source-type: deb
    # Packages required to run the part
    stage-packages: 
      - bzip2
      - zlib1g
      - libglu1-mesa
      - libegl1-mesa
      - libgl1-mesa-dri
      - ocl-icd-libopencl1
    # This part should be created after..
    after:
      - desktop-gtk2
    # Overrides the last step of the process to allow that after calling again prime, we can symlink a required library
    # The library is a relative symbolic link, so the reference is relative to the file and we avoid issues
    # We test if the symlink exists, as 
    override-prime: |
      snapcraftctl prime
      OPENGL_SYMLINK="usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libOpenCL.so"
      test ! -f "$OPENGL_SYMLINK" && ln -rs usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libOpenCL.so.1 "$OPENGL_SYMLINK" || echo "Found $OPENGL_SYMLINK, not linking"

  fahcontrol:
    plugin: dump
    source: https://download.foldingathome.org/releases/public/release/fahcontrol/debian-stable-64bit/v7.5/fahcontrol_7.5.1-1_all.deb
    source-type: deb
    stage-packages: 
      - python
      - python-gtk2
      - libxtst6
      - libcanberra-gtk-module
      - libatk-adaptor
      - libgail-common
    after:
      - desktop-gtk2
      - fahclient
  fahviewer:
    plugin: dump
    source: https://download.foldingathome.org/releases/public/release/fahviewer/debian-stable-64bit/v7.5/fahviewer_7.5.1_amd64.deb
    source-type: deb
    stage-packages: 
      - libx11-6
      - bzip2
      - zlib1g
      - libexpat1
      - libgl1-mesa-glx
      - libglu1-mesa
      - freeglut3
    after:
      - desktop-gtk2
      - fahclient

apps:
  configure: 
    command: usr/bin/FAHClient -v --chdir $SNAP_COMMON --configure
    environment:
      LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/:/var/lib/snapd/hostfs/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/"
    # Makes this command be an autorun command upon install and boot: https://snapcraft.io/docs/services-and-daemons
    # Simple indicates that the command calls the service (no forking)
    # daemon: simple
    plugs:
      - browser-support
      - network
      - network-bind
      - opengl
      - x11
      - unity7
      - home
      - serial-port
      - raw-usb
      - desktop
      - desktop-legacy
      - hardware-observe
  client:
    command: usr/bin/FAHClient -v --chdir $SNAP_COMMON
    environment:
      LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/:/var/lib/snapd/hostfs/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/"
    # Makes this command be an autorun command upon install and boot: https://snapcraft.io/docs/services-and-daemons
    # Simple indicates that the command calls the service (no forking) 
    daemon: simple
    plugs:
      - network
      - network-bind
      - opengl
      - x11
      - unity7
      - home
      - serial-port
      - raw-usb
      - desktop
      - desktop-legacy
      - hardware-observe
  FAHControl:
    # Set required environment variables
    environment:
      PYTHONPATH: "/usr/lib/python2.7/dist-packages:$SNAP/usr/lib/python2.7/dist-packages"
      DISABLE_WAYLAND: "1"  # Fallback to XWayland if running in a Wayland session.
      LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/:/var/lib/snapd/hostfs/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/"
    plugs:
      - x11
      - unity7
      - home
      - network
      - serial-port
      - raw-usb
      - desktop
      - desktop-legacy
      - opengl
      - hardware-observe
      - browser-support
    # 'desktop-launch' sets up the environment to correctly launch the application for desktop working
    command: desktop-launch python $SNAP/usr/bin/FAHControl
  FAHViewer:
    command: desktop-launch $SNAP/usr/bin/FAHViewer
    environment:
      DISABLE_WAYLAND: "1"  # Fallback to XWayland if running in a Wayland session.
      LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/:/var/lib/snapd/hostfs/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/"
    plugs:
      - x11
      - unity7
      - home
      - network
      - serial-port
      - raw-usb
      - desktop
      - desktop-legacy
      - opengl
      - hardware-observe
      - browser-support
  folding-at-home-fcole90:
    command: usr/bin/FAHClient -v --chdir $SNAP_USER_COMMON
    autostart: folding-at-home-fcole90.desktop
    environment:
    
      LD_LIBRARY_PATH: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/:/var/lib/snapd/hostfs/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/"
    # Makes this command be an autorun command upon install and boot: https://snapcraft.io/docs/services-and-daemons
    # Simple indicates that the command calls the service (no forking)
    # daemon: simple
    plugs:
      - network
      - network-bind
      - opengl
      - x11
      - unity7
      - home
      - serial-port
      - raw-usb
      - desktop
      - desktop-legacy
      - hardware-observe
      - browser-support
plugs:
  gtk-2-engines:
    interface: content
    target: $SNAP/lib/gtk-2.0
    default-provider: gtk2-common-themes
  gtk-2-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

